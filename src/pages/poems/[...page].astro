---
import { getCollection } from "astro:content";
import type { GetStaticPaths } from "astro";
import Pagination from "@/components/control/Pagination.astro";
import { PAGE_SIZE } from "@/constants/constants";
import MainGridLayout from "@/layouts/MainGridLayout.astro";

// 生成静态分页路径（保持你的写法）
export const getStaticPaths = (async ({ paginate }) => {
	// ① 加上草稿过滤
	const allPoems = (await getCollection("poems")).filter((p) => !p.data.draft);

	// ② 按 published 倒序（与你原逻辑一致）
	allPoems.sort(
		(a, b) =>
			new Date(b.data.published).getTime() -
			new Date(a.data.published).getTime(),
	);

	return paginate(allPoems, { pageSize: PAGE_SIZE });
}) satisfies GetStaticPaths;

const { page } = Astro.props;

// ③ 仅在第一页显示“今日诗句”
const isFirstPage = page.currentPage === 1;

// 为“今日诗句”再取一次全量（含非当前页的），随机挑选并渲染正文
let todaysPoem = null;
let Content = null;
if (isFirstPage) {
	const all = (await getCollection("poems")).filter((p) => !p.data.draft);
	all.sort(
		(a, b) =>
			new Date(b.data.published).getTime() -
			new Date(a.data.published).getTime(),
	);
	const idx = Math.floor(Math.random() * all.length);
	todaysPoem = all[idx] ?? null;
	({ Content } = todaysPoem ? await todaysPoem.render() : { Content: null });
}
---

<MainGridLayout title="诗词集" description="本站精选诗词" lang="zh">
  {isFirstPage && todaysPoem && (
    <section class="card-base rounded-2xl border p-5 mb-6">
      <div class="text-sm opacity-70 mb-2">✨ 随机诗句</div>
      <a href={`/poems/${todaysPoem.slug}/`} class="block no-underline">
        <div class="font-bold text-xl">{todaysPoem.data.title}</div>
        <div class="opacity-70 mt-1">{todaysPoem.data.author}</div>
        <article class="mt-3 prose-lg dark:prose-invert font-kai !text-[1.4rem] md:@!text-[1.4rem]">
          {Content && <Content />}
        </article>
      </a>
    </section>
  )}

  <div class="grid gap-4">
    {page.data.map((p) => (
      <a href={`/poems/${p.slug}/`} class="no-underline">
        <div class="btn-card rounded-2xl p-4 hover:shadow">
          <div class="font-bold text-lg">{p.data.title}</div>
          <div class="opacity-70 mt-1">
            {p.data.author}{p.data.dynasty ? ` · ${p.data.dynasty}` : ""}{p.data.lang ? ` · ${p.data.lang}` : ""}
          </div>
          {p.data.description && <div class="mt-2">{p.data.description}</div>}
        </div>
      </a>
    ))}
  </div>
  <Pagination page={page} base="/poems" class="mx-auto onload-animation mt-6" />


</MainGridLayout>
